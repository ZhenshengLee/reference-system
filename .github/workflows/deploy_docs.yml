name: Deploy Documentation
on:
  # Only deploy docs if build docs workflow passes
  workflow_run:
    workflows: ["Build Documentation"]
    types:
      - completed
    branches:
      - main  # only deploy if docs built are from main (do not deploy pr doc builds)
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-mkdocs:
    runs-on: ubuntu-latest
    # Only run job if docs build workflow succeeds
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Setup workspace
        # TODO(flynneva): make this a variable and use it at every step
        run: mkdir -p ros2_ws/src/reference_system
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: ros2_ws/src/reference_system
      - name: Download API reference
        uses: dawidd6/action-download-artifact@v2
        with:
          name: api_reference
          path: 'ros2_ws/src/reference_system/docs/api-reference'
          workflow: ${{ github.event.workflow_run.workflow_id }}
      - name: Deploy mkdocs site
        run: |
          cd ros2_ws/src/reference_system
          # ensure gh-pages git history is fetched
          git fetch origin gh-pages --depth=1
          sudo apt-get update -y
          # install docs dependencies
          python3 -m pip install -r docs/requirements.txt
          # TODO: mike rebuilds entire site, instead we should
          # skip the build and download site artifact from previous workflow
          if [ -z ${{ github.event.release.tag_name }}]; then
            export NEW_VERSION=main
          else
            export NEW_VERSION=${{ github.event.release.tag_name }}
          fi
          git config user.name doc-bot
          git config user.email doc-bot@flynnlabs.com
          mike deploy --push --update-aliases $NEW_VERSION latest
