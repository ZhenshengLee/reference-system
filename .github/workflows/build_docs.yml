name: Build Documentation

on:
  workflow_run:
    workflows: [Build and test]
    types: [completed]
    branches: [main]
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  WORKSPACE_PATH: ros_ws/src/reference_system
  DOXYGEN_ARTIFACT: doxygen_xml
  DOXYBOOK_ARTIFACT: api_reference
  DOXYBOOK_VERSION: v1.4.0

jobs:
  generate-doxygen:
    runs-on: ubuntu-latest
    container:
      image: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
    steps:
      - name: Make sure output directory exists
        run: mkdir -p ${{ env.WORKSPACE_PATH }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKSPACE_PATH }}
      - name: Generate doxygen and upload as artifact
        # TODO: figure out way to use WORKSPACE_PATH var here
        uses: ./ros_ws/src/reference_system/.github/actions/generate-doxygen
        with:
          working-directory: ${{ env.WORKSPACE_PATH }}
          doxyfile-path: '.doxygen/Doxyfile'
          artifact-path: ${{ env.WORKSPACE_PATH }}/docs/xml
          artifact-name: ${{ env.DOXYGEN_ARTIFACT }}
          artifact-retention-days: 30
  generate-doxybook2:
    runs-on: ubuntu-latest
    needs: generate-doxygen
    steps:
      - name: Make sure output directory exists
        run: mkdir -p ${{ env.WORKSPACE_PATH }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKSPACE_PATH }}
      - name: Generate API reference and upload as artifact
        # TODO: figure out way to use WORKSPACE_PATH var here
        uses: ./ros_ws/src/reference_system/.github/actions/generate-doxybook
        with:
          input-doxygen-artifact: ${{ env.DOXYGEN_ARTIFACT }}
          doxygen-artifact-extraction-path: ${{ env.WORKSPACE_PATH }}/docs/xml
          doxybook2-version: ${{ env.DOXYBOOK_VERSION }}
          doxybook2-config-path: ${{ env.WORKSPACE_PATH }}/docs/doxybook2_config.json
          output-path: ${{ env.WORKSPACE_PATH }}/docs/api-reference
          base-url: /reference-system/latest/api-reference/
          artifact-path: ${{ env.WORKSPACE_PATH }}/docs/api-reference
          artifact-name: ${{ env.DOXYBOOK_ARTIFACT }}
          artifact-retention-days: 30
  build-mkdocs:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    needs: generate-doxybook2
    steps:
      - name: Make sure output directory exists
        run: mkdir -p ${{ env.WORKSPACE_PATH }}
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKSPACE_PATH }}
      - name: Download API Reference
        uses: actions/download-artifact@v3
        with:
          name: api_reference
          path: ${{ env.WORKSPACE_PATH }}/docs/api-reference
      - name: Build mkdocs site
        run: |
          cd ${{ env.WORKSPACE_PATH }}
          # ensure gh-pages git history is fetched
          git fetch origin gh-pages --depth=1
          sudo apt-get update -y
          # install mkdocs dependencies
          python3 -m pip install -r docs/requirements.txt
          # build site
          mkdocs build
      - name: Upload docs site
        uses: actions/upload-artifact@v3
        with:
          name: reference_system_site
          path: ${{ env.WORKSPACE_PATH }}/site
  run_benchmarks:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only run benchmarks on `main`
    steps:
      - uses: ./ros_ws/src/reference_system/.github/workflows/run_benchmarks.yml
  deploy_docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy on `main`
    needs: [build-mkdocs, run_benchmarks]
    steps:
      - uses: ./ros_ws/src/reference_system/.github/workflows/deploy_docs.yml
 
